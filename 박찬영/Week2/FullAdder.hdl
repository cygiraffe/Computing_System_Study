// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/FullAdder.hdl
/**
 * Computes the sum of three bits.
 */
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    //// Replace this comment with your code.
    HalfAdder(a=a, b=b, sum=s1, carry=c1);
    HalfAdder(a=s1, b=c, sum=sum, carry=c2);
    Or(a=c1, b=c2, out=carry);
    
}

/*
(a,b,c)조합은 [(0,0,0),(0,0,1),(0,1,0),(0,1,1),(1,0,0),(1,0,1),(1,1,0),(1,1,1)]이다.
HalfAdder(a=a, b=b, sum=s1, carry=c1)를 하면 세 수 중 두 수에 대해서 덧셈을 해서 sum과 carry를 각각 s1, c1에 저장
이후 s1을 다시 c와 HalfAdder연산을 해서 최종 sum을 구한다. 이 연산에서 나오는 carry는 c2에 저장
c1와 c2는 둘 다 0이거나, 최대여도 둘 중 하나가 1이다. 이 둘을 다시 HalfAdder 연산을 해 주면, 최종 연산의 carry값을 구할 수 있다.

*/